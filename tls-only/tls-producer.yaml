---
apiVersion: v1
data:
  kafka.properties: Ym9vdHN0cmFwLnNlcnZlcnM9a2Fma2EuY29uZmx1ZW50LnN2Yy5jbHVzdGVyLmxvY2FsOjkwNzEKc2VjdXJpdHkucHJvdG9jb2w9U1NMCnNzbC50cnVzdHN0b3JlLmxvY2F0aW9uPS9tbnQvc3NsY2VydHMvdHJ1c3RzdG9yZS5qa3MKc3NsLnRydXN0c3RvcmUucGFzc3dvcmQ9bXlzdG9yZXBhc3N3b3Jk
kind: Secret
metadata:
  name: kafka-client-config-secure
  namespace: confluent
---
apiVersion: platform.confluent.io/v1beta1
kind: KafkaTopic
metadata:
  name: elastic-0
  namespace: confluent
spec:
  replicas: 3
  partitionCount: 1
  configs:
    cleanup.policy: "delete"
---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: elastic
spec:
  serviceName: elastic
  podManagementPolicy: Parallel
  replicas: 1
  selector:
    matchLabels:
      app: elastic
  template:
    metadata:
      labels:
        app: elastic
    spec:
      containers:
        - name: elastic
          image: confluentinc/cp-kafka:latest
          command:
            - /bin/sh
            - -c
            - |
              kafka-producer-perf-test \
                --topic ${HOSTNAME}  \
                --record-size 524288 \
                --throughput 64 \
                --producer.config /mnt/kafka.properties \
                --num-records 230400
          volumeMounts:
            - name: kafka-properties
              mountPath: /mnt
            - name: kafka-ssl-autogenerated
              mountPath: /mnt/sslcerts
          resources:
            requests:
              memory: 512Mi
              cpu: 500m
      volumes:
        # This application pod will mount a volume for Kafka client properties from
        # the secret `kafka-client-config-secure`
        - name: kafka-properties
          secret:
            secretName: kafka-client-config-secure
        # Confluent for Kubernetes, when configured with autogenerated certs, will create a
        # JKS keystore and truststore and store that in a Kubernetes secret named `kafka-generated-jks`.
        # Here, this client appliation will mount a volume from this secret so that it can use the JKS files.
        - name: kafka-ssl-autogenerated
          secret:
            secretName: kafka-generated-jks
---
apiVersion: v1
kind: Service
metadata:
  name: elastic
spec:
  clusterIP: None
