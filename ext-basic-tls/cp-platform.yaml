---
apiVersion: platform.confluent.io/v1beta1
kind: Zookeeper
metadata:
  name: zookeeper
  namespace: confluent
spec:
  configOverrides:
    jvm:
      - "-Xms2g"
      - "-Xmx2g"
    server:
      - "4lw.commands.whitelist=*"
  oneReplicaPerNode: true
  podTemplate:
    resources:
      requests:
        cpu: "1.2"
        memory: 2Gi
      limits:
        cpu: "1.2"
        memory: 2Gi
  replicas: 1
  license:
    globalLicense: true
  image:
    application: confluentinc/cp-zookeeper:7.1.0
    init: confluentinc/confluent-init-container:2.3.0
  dataVolumeCapacity: 50Gi
  logVolumeCapacity: 100Gi
  authentication:
    type: mtls
  tls:
    autoGeneratedCerts: true

---
apiVersion: platform.confluent.io/v1beta1
kind: Kafka
metadata:
  name: kafka
  namespace: confluent
spec:
  oneReplicaPerNode: true
  # podTemplate:
  #   resources:
  #     requests:
  #       cpu: "1.1"
  #       memory: 8Gi
  #     limits:
  #       cpu: "1.3"
  #       memory: 12Gi
  # configOverrides:
  #   jvm:
  #     - "-Xms6g"
  #     - "-Xmx6g"
  #   server:
  #     - "min.insync.replicas=2"
  #     - "default.replication.factor=3"
  #     - "num.partitions=1"
  #     - "confluent.tier.metadata.replication.factor=3"
  #     - "offsets.topic.replication.factor=3"
  #     - "transaction.state.log.replication.factor=3"
  #     - "num.io.threads=2"
  #     - "num.network.threads=2"
  #     - "num.replica.fetchers=2"
  #     - "auto.create.topics.enable=false"
  #     - "confluent.balancer.heal.uneven.load.trigger=ANY_UNEVEN_LOAD"
  replicas: 3
  image:
    application: confluentinc/cp-server:7.1.0
    init: confluentinc/confluent-init-container:2.3.0
  dataVolumeCapacity: 100Gi
  tls:
    autoGeneratedCerts: true
  listeners:
  #   internal:
  #     authentication:
  #       type: mtls
  #     tls:
  #       enabled: true
    external:
      authentication:
        type: plain
        jaasConfig:
          secretRef: kafka-users
  #     tls:
  #       enabled: true
  #       secretRef: tls-group3
  #     externalAccess:
  #       type: loadBalancer
  #       loadBalancer:
  #         annotations:
  #           service.beta.kubernetes.io/azure-load-balancer-internal: "true"
  #         domain: qa-kafka-ecsuk-aks.dhl.com
  #         # kafka0.qa-kafka-ecsuk-aks.dhl.com
  #         # kafka1.qa-kafka-ecsuk-aks.dhl.com
  #         # kafka2.qa-kafka-ecsuk-aks.dhl.com
  #         # kafka-lb.qa-kafka-ecsuk-aks.dhl.com
  #         brokerPrefix: kafka
  #         bootstrapPrefix: kafka-lb
  #   custom:
  #   - name: clients
  #     port: 9093
  #     authentication:
  #       type: plain
  #       jaasConfig:
  #         secretRef: kafka-credential
  #     tls:
  #       enabled: true
  #       secretRef: tls-ext-group
  #     externalAccess:
  #       type: loadBalancer
  #       loadBalancer:
  #         annotations:
  #           service.beta.kubernetes.io/azure-load-balancer-internal: "true"
  #         domain: aks.qa.dhlparcel.co.uk
  #         # kafka0.qa-kafka-ecsuk-aks.dhl.com
  #         # kafka1.qa-kafka-ecsuk-aks.dhl.com
  #         # kafka2.qa-kafka-ecsuk-aks.dhl.com
  #         # kafka-lb.qa-kafka-ecsuk-aks.dhl.com
  #         brokerPrefix: kafka
  #         bootstrapPrefix: kafka          
  authorization:
    type: simple
    superUsers:
    - User:kafka
    - User:admin
  dependencies:
    zookeeper:
      endpoint: zookeeper.confluent.svc.cluster.local:2182
      authentication:
        type: mtls
      tls:
        enabled: true
---